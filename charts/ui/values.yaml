# Default values for ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: denimgroup/ui
  pullPolicy: IfNotPresent
wait:
  enabled: true
  securityContext: {}
  image:
    registry: docker.io
    repository: busybox
    tag: "1.28"
    pullPolicy: IfNotPresent

nameOverride: ""

service:
  type: ClusterIP
  port: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

ingress:
  enabled: false
  # Used to create an Ingress record.
  hosts:
    - chart-example.local
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

waitForDependencies: true

nodeSelector: {}

tolerations: []

affinity: {}

annotations: {}

appsec: {}
auth: {}
crud: {}

global: {}

ingressClass: kong
extraVolumes: []
extraVolumeMounts: []

livenessProbe:
  enabled: true
  # initialDelaySeconds: 
  periodSeconds: 5
  # timeoutSeconds:
  # successThreshold:
  # failureThreshold:
# customLivenessProbe: {}
readinessProbe:
  enabled: true
  # initialDelaySeconds:
  periodSeconds: 5
  # timeoutSeconds:
  # successThreshold:
  # failureThreshold:
# customReadinessProbe: {}
startupProbe:
  enabled: true
  # initialDelaySeconds:
  periodSeconds: 5
  # timeoutSeconds:
  # successThreshold:
  failureThreshold: 12
# customStartupProbe: {}